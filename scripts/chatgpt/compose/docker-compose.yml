version: "3.9"

networks:
  reverse-proxy:
    external: false

volumes:
  grafana-data: {}
  prometheus-data: {}

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.le.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      # Dashboard only if usersfile present
      - "--api.dashboard=true"
    ports:
      - "80:80"
      - "443:443"
    networks: [reverse-proxy]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/acme.json:/letsencrypt/acme.json"
      - "./traefik/traefik.yml:/traefik.yml:ro"
      - "./traefik/dynamic:/dynamic:ro"
      - "./traefik/usersfile:/usersfile:ro"
    labels:
      - "traefik.enable=true"
      # Traefik dashboard at traefik.DOMAIN (if usersfile exists)
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=le"
      - "traefik.http.routers.dashboard.service=api@internal"
      # Apply basic auth only when usersfile exists
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth@file"

  whoami:
    image: traefik/whoami
    container_name: whoami
    networks: [reverse-proxy]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=le"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks: [reverse-proxy]
    volumes:
      - prometheus-data:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prom.rule=Host(`prometheus.${DOMAIN}`)"
      - "traefik.http.routers.prom.entrypoints=websecure"
      - "traefik.http.routers.prom.tls.certresolver=le"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks: [reverse-proxy]
    depends_on: [prometheus]
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS:-admin}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=le"

        nginx_www:
    image: nginx:stable
    container_name: nginx_www
    restart: unless-stopped
    networks: [reverse-proxy]
    volumes:
      - /var/www/html:/usr/share/nginx/html:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.www.rule=Host(`www.${DOMAIN}`)"
      - "traefik.http.routers.www.entrypoints=websecure"
      - "traefik.http.routers.www.tls.certresolver=le"

